name: crud example
description: this workflow generate GO code

vars:
  local_repo_dir: ./workspace/avila-easychat-goals
  source_branch: dev
  branch_name: model3turbo
  repo_name: avila-easychat-goals
  additional_model: gpt-4o-mini
  model2: ModelGpt4Turbo
  model: ModelGpt35Turbo
  model3: ModelOllama
  model4: ModelDeepSeekCoder67

  product_fields: |
        ID (int)
        Name (string, required)
        Price (float64, required)

  order_fields: |
        ID (int)
        OrderDate (datetime, required)
        EmployeeID (int, required)
        Status (int, required)

  orderdetail_fields: |
        ID (int)
        OrderID (int)
        ProductID (int)
        UnitPrice (float64, required)
        Quantity (int, required)

steps:

  - name: clone_repo
    type: git
    agent: GitHubCloneOrUpdateRepoAgent
    input:
      repo_url: https://github.com/vccaso/avila-easychat-goals.git
      local_repo_dir: ${local_repo_dir}

  - name: checkout_branch
    type: git
    agent: GitHubCheckoutBranchAgent
    input:
      source_branch: ${source_branch}
      local_repo_dir: ${local_repo_dir}

  - name: create_branch
    type: git
    agent: GitHubCreateBranchAgent
    input:
      branch_name: ${branch_name}
      local_repo_dir: ${local_repo_dir}

  - name: generate_product
    type: ai
    agent: GoCRUDAgent
    model: ${model4}
    template_name: go_crud
    input:
      model: "Product"
      fields: ${product_fields}
      local_repo_dir: ${local_repo_dir}

  - name: generate_data_layer_product
    type: ai
    agent: GoCRUDDataAgent
    model: ${model4}
    prompt_template: data_only
    temperature: 0.2
    input:
      model: Product
      fields: ${product_fields}
      local_repo_dir: ${local_repo_dir}

  - name: generate_data_layer_detail
    type: ai
    agent: GoCRUDDataAgent
    model: ${model3}
    prompt_template: data_only
    temperature: 0.2
    input:
      model: Order
      fields: ${order_fields}
      local_repo_dir: ${local_repo_dir}

  - name: generate_data_layer_detail
    type: ai
    agent: GoCRUDDataAgent
    model: ${model3}
    prompt_template: data_only
    temperature: 0.2
    input:
      model: OrderDetail
      fields: ${orderdetail_fields}
      local_repo_dir: ${local_repo_dir}

  - name: stage_commit_push
    type: git
    agent: GitHubCommitAgent
    input:
      new_branch: ${branch_name}
      local_repo_dir: ${local_repo_dir}
      commit_message: "Code added for Product and Ticket"

  - name: pull_request
    type: git
    agent: GitHubPRAgent
    input:
      repo_name: ${repo_name}
      pr_title: "Product and Ticket added"
      new_branch: ${branch_name}
      source_branch: ${source_branch}
      pr_body: "Code generated for Product and Ticket"
